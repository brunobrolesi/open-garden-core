// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks_gateway

import (
	model "github.com/brunobrolesi/open-garden-core/internal/user/business/model"
	mock "github.com/stretchr/testify/mock"
)

// TokenService is an autogenerated mock type for the TokenService type
type TokenService struct {
	mock.Mock
}

// GenerateToken provides a mock function with given fields: userId
func (_m *TokenService) GenerateToken(userId int) (model.Token, error) {
	ret := _m.Called(userId)

	var r0 model.Token
	if rf, ok := ret.Get(0).(func(int) model.Token); ok {
		r0 = rf(userId)
	} else {
		r0 = ret.Get(0).(model.Token)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(userId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTokenService interface {
	mock.TestingT
	Cleanup(func())
}

// NewTokenService creates a new instance of TokenService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTokenService(t mockConstructorTestingTNewTokenService) *TokenService {
	mock := &TokenService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
